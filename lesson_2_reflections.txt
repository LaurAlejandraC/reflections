What happens when you initialize a repository? Why do you need to do it?
It creates the .git file that is necessary because otherwise we couldn't keep the system control of the project or folder.

How is the staging area different from the working directory and the repository? What value do you think it offers?
Staging area is an intermediate connection between working directory and the repository. It "saves" the files that we want to track but it isn't the same as a commit.

How can you use the staging area to make sure you have one commit per logical change?
Because you can compare between the staging area and the last commit, so you can be sure that the last change is logical.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
For example when you're trying to try something new but you're not sure of it, it'll help because it keeps the last version and you can work with the same code in a different functionality that may not work.

How do the diagrams help you visualize the branch structure?
Because it helps seeing if there's a problem at reaching any branch that we can create, losting the changes that we want to make.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
When we merge two branches together we are combining the functions of the branches, for example, if we added a functionallity as an experiment and we liked the result but to the main branch we have also made changes we don't want to lost the work that we have been doing. We represent it in that way because it's the combination of both branches.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Automatic merge can be faster than a manual merge but it can incorporate errors to the code, doing it manually you can assure that all the conflicts are solved correctly.